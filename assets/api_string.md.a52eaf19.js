import{_ as s,c as n,o as a,a as l}from"./app.5603aa3a.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"useString","slug":"usestring","link":"#usestring","children":[{"level":3,"title":"to_str","slug":"to-str","link":"#to-str","children":[]},{"level":3,"title":"to_bytes","slug":"to-bytes","link":"#to-bytes","children":[]},{"level":3,"title":"random","slug":"random","link":"#random","children":[]},{"level":3,"title":"get_middle","slug":"get-middle","link":"#get-middle","children":[]},{"level":3,"title":"get_middle_batch","slug":"get-middle-batch","link":"#get-middle-batch","children":[]},{"level":3,"title":"get_left","slug":"get-left","link":"#get-left","children":[]},{"level":3,"title":"get_right","slug":"get-right","link":"#get-right","children":[]},{"level":3,"title":"uuid","slug":"uuid","link":"#uuid","children":[]},{"level":3,"title":"reverse","slug":"reverse","link":"#reverse","children":[]},{"level":3,"title":"encode","slug":"encode","link":"#encode","children":[]},{"level":3,"title":"decode","slug":"decode","link":"#decode","children":[]}]}],"relativePath":"api/string.md","lastUpdated":1676699556000}'),p={name:"api/string.md"},o=l(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>python中的字符串的功能扩展</p></div><h2 id="usestring" tabindex="-1">useString <a class="header-anchor" href="#usestring" aria-hidden="true">#</a></h2><p>扩展字符串，提供了一些常用的方法。</p><h3 id="to-str" tabindex="-1">to_str <a class="header-anchor" href="#to-str" aria-hidden="true">#</a></h3><p>将对象转换为字符串。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">to_str</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> encoding</span><span style="color:#CB7676;">=</span><span style="color:#4D9375;">None</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#CB7676;">=</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">strict</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    将 bytes 或者 bytearray 转换为 str</span></span>
<span class="line"><span style="color:#C98A7D;">    :param s: bytes 或者 bytearray</span></span>
<span class="line"><span style="color:#C98A7D;">    :param encoding: 编码</span></span>
<span class="line"><span style="color:#C98A7D;">    :param errors: 错误处理</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: str</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">not</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#B8A965;">bytes</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">bytearray</span><span style="color:#666666;">)):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">decode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoding </span><span style="color:#4D9375;">or</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#666666;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">to_str</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> encoding</span><span style="color:#CB7676;">=</span><span style="color:#4D9375;">None</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#CB7676;">=</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">strict</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    将 bytes 或者 bytearray 转换为 str</span></span>
<span class="line"><span style="color:#C98A7D;">    :param s: bytes 或者 bytearray</span></span>
<span class="line"><span style="color:#C98A7D;">    :param encoding: 编码</span></span>
<span class="line"><span style="color:#C98A7D;">    :param errors: 错误处理</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: str</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">not</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#B8A965;">bytes</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">bytearray</span><span style="color:#666666;">)):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">decode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoding </span><span style="color:#4D9375;">or</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#666666;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="to-bytes" tabindex="-1">to_bytes <a class="header-anchor" href="#to-bytes" aria-hidden="true">#</a></h3><p>将对象转换为bytes。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">to_bytes</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> encoding</span><span style="color:#CB7676;">=</span><span style="color:#4D9375;">None</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#CB7676;">=</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">strict</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    将 str 转换为 bytes</span></span>
<span class="line"><span style="color:#C98A7D;">    :param s: str</span></span>
<span class="line"><span style="color:#C98A7D;">    :param encoding: 编码 </span></span>
<span class="line"><span style="color:#C98A7D;">    :param errors: 错误处理</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: bytes</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">bytes</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">not</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">bytes</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">encode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoding </span><span style="color:#4D9375;">or</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#666666;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">to_bytes</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> encoding</span><span style="color:#CB7676;">=</span><span style="color:#4D9375;">None</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#CB7676;">=</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">strict</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    将 str 转换为 bytes</span></span>
<span class="line"><span style="color:#C98A7D;">    :param s: str</span></span>
<span class="line"><span style="color:#C98A7D;">    :param encoding: 编码 </span></span>
<span class="line"><span style="color:#C98A7D;">    :param errors: 错误处理</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: bytes</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">bytes</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">not</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">isinstance</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">bytes</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">s</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> s</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">encode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoding </span><span style="color:#4D9375;">or</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> errors</span><span style="color:#666666;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="random" tabindex="-1">random <a class="header-anchor" href="#random" aria-hidden="true">#</a></h3><p>生成随机字符串。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">random</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">min_len</span><span style="color:#CB7676;">=</span><span style="color:#4C9A91;">3</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> max_len</span><span style="color:#CB7676;">=</span><span style="color:#4C9A91;">20</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> characters</span><span style="color:#CB7676;">=</span><span style="color:#4D9375;">None</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    生成随机字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param min_len: 最小长度</span></span>
<span class="line"><span style="color:#C98A7D;">    :param max_len: 最大长度</span></span>
<span class="line"><span style="color:#C98A7D;">    :param characters: 字符集</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 随机字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    characters </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> characters </span><span style="color:#CB7676;">or</span><span style="color:#DBD7CAEE;"> _characters</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    _len </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> randint</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">min_len</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> max_len</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> max_len </span><span style="color:#CB7676;">&gt;</span><span style="color:#DBD7CAEE;"> min_len </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> min_len</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&#39;&#39;</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">join</span><span style="color:#666666;">((</span><span style="color:#DBD7CAEE;">choice</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">characters</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#4D9375;">in</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">range</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">_len</span><span style="color:#666666;">)))</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">random</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">min_len</span><span style="color:#CB7676;">=</span><span style="color:#4C9A91;">3</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> max_len</span><span style="color:#CB7676;">=</span><span style="color:#4C9A91;">20</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> characters</span><span style="color:#CB7676;">=</span><span style="color:#4D9375;">None</span><span style="color:#666666;">):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    生成随机字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param min_len: 最小长度</span></span>
<span class="line"><span style="color:#C98A7D;">    :param max_len: 最大长度</span></span>
<span class="line"><span style="color:#C98A7D;">    :param characters: 字符集</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 随机字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    characters </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> characters </span><span style="color:#CB7676;">or</span><span style="color:#DBD7CAEE;"> _characters</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    _len </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> randint</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">min_len</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> max_len</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> max_len </span><span style="color:#CB7676;">&gt;</span><span style="color:#DBD7CAEE;"> min_len </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> min_len</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&#39;&#39;</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">join</span><span style="color:#666666;">((</span><span style="color:#DBD7CAEE;">choice</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">characters</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#4D9375;">in</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">range</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">_len</span><span style="color:#666666;">)))</span></span>
<span class="line"></span></code></pre></div><h3 id="get-middle" tabindex="-1">get_middle <a class="header-anchor" href="#get-middle" aria-hidden="true">#</a></h3><p>获取字符串中间的内容。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_middle</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        start_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        end_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> Optional</span><span style="color:#666666;">[</span><span style="color:#B8A965;">str</span><span style="color:#666666;">]:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param start_str: 开始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param end_str: 结束字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_middle(&#39;abc123def&#39;, &#39;abc&#39;, &#39;def&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;123&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> start_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> end_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> find_str</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_middle</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        start_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        end_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> Optional</span><span style="color:#666666;">[</span><span style="color:#B8A965;">str</span><span style="color:#666666;">]:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param start_str: 开始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param end_str: 结束字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_middle(&#39;abc123def&#39;, &#39;abc&#39;, &#39;def&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;123&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> start_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> end_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> find_str</span></span>
<span class="line"></span></code></pre></div><h3 id="get-middle-batch" tabindex="-1">get_middle_batch <a class="header-anchor" href="#get-middle-batch" aria-hidden="true">#</a></h3><p>批量获取字符串中间的内容，返回列表。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_middle_batch</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        start_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        end_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">list</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param start_str: 开始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param end_str: 结束字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_middle_batch(&#39;abc123def456abc789def&#39;, &#39;abc&#39;, &#39;def&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    [&#39;123&#39;, &#39;789&#39;]</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    result </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">while</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">True</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> start_</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> end_ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> start_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> end_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> find_str </span><span style="color:#CB7676;">is</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">None</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">            </span><span style="color:#4D9375;">break</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        result</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">append</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">find_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> original_str</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">end_</span><span style="color:#666666;">:]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> result</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_middle_batch</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        start_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        end_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">list</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param start_str: 开始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param end_str: 结束字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 中间内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_middle_batch(&#39;abc123def456abc789def&#39;, &#39;abc&#39;, &#39;def&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    [&#39;123&#39;, &#39;789&#39;]</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    result </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">while</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">True</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> start_</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> end_ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> start_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> end_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> find_str </span><span style="color:#CB7676;">is</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">None</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">            </span><span style="color:#4D9375;">break</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        result</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">append</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">find_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> original_str</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">end_</span><span style="color:#666666;">:]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> result</span></span>
<span class="line"></span></code></pre></div><h3 id="get-left" tabindex="-1">get_left <a class="header-anchor" href="#get-left" aria-hidden="true">#</a></h3><p>获取字符串左边的内容。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_left</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        end_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> Optional</span><span style="color:#666666;">[</span><span style="color:#B8A965;">str</span><span style="color:#666666;">]:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串左边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param end_str: 结束字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 左边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_left(&#39;abc123def&#39;, &#39;def&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;abc123&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">end_str</span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;">end_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> find_str</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_left</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        end_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> Optional</span><span style="color:#666666;">[</span><span style="color:#B8A965;">str</span><span style="color:#666666;">]:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串左边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param end_str: 结束字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 左边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_left(&#39;abc123def&#39;, &#39;def&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;abc123&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">end_str</span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;">end_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> find_str</span></span>
<span class="line"></span></code></pre></div><h3 id="get-right" tabindex="-1">get_right <a class="header-anchor" href="#get-right" aria-hidden="true">#</a></h3><p>获取字符串右边的内容。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_right</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        start_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> Optional</span><span style="color:#666666;">[</span><span style="color:#B8A965;">str</span><span style="color:#666666;">]:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串右边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param start_str: 开始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 右边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_right(&#39;abc123def&#39;, &#39;abc&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;123def&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">start_str</span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;">start_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> find_str</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">get_right</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        start_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span></span>
<span class="line"><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> Optional</span><span style="color:#666666;">[</span><span style="color:#B8A965;">str</span><span style="color:#666666;">]:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    获取字符串右边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param start_str: 开始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 右边内容</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.get_right(&#39;abc123def&#39;, &#39;abc&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;123def&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    find_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> _ </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> UseString</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">_get_section</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">start_str</span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;">start_str</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> find_str</span></span>
<span class="line"></span></code></pre></div><h3 id="uuid" tabindex="-1">uuid <a class="header-anchor" href="#uuid" aria-hidden="true">#</a></h3><p>生成uuid。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#B8A965;">staticmethod</span></span>
<span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">uuid</span><span style="color:#666666;">():</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">f</span><span style="color:#C98A7D;">&quot;</span><span style="color:#C99076;">{</span><span style="color:#DBD7CAEE;">uuid4</span><span style="color:#666666;">().</span><span style="color:#DBD7CAEE;">hex</span><span style="color:#C99076;">}</span><span style="color:#C98A7D;">&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#B8A965;">staticmethod</span></span>
<span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">uuid</span><span style="color:#666666;">():</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">f</span><span style="color:#C98A7D;">&quot;</span><span style="color:#C99076;">{</span><span style="color:#DBD7CAEE;">uuid4</span><span style="color:#666666;">().</span><span style="color:#DBD7CAEE;">hex</span><span style="color:#C99076;">}</span><span style="color:#C98A7D;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="reverse" tabindex="-1">reverse <a class="header-anchor" href="#reverse" aria-hidden="true">#</a></h3><p>反转字符串。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">reverse</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    反转字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 反转后字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.reverse(&#39;abc&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;cba&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> original_str</span><span style="color:#666666;">[::</span><span style="color:#CB7676;">-</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">reverse</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    反转字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 反转后字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#4D9375;">&gt;&gt;&gt; </span><span style="color:#C98A7D;">UseString.reverse(&#39;abc&#39;)</span></span>
<span class="line"><span style="color:#C98A7D;">    &#39;cba&#39;</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> original_str</span><span style="color:#666666;">[::</span><span style="color:#CB7676;">-</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="encode" tabindex="-1">encode <a class="header-anchor" href="#encode" aria-hidden="true">#</a></h3><p>自定义密码加密字符串。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">encode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    加密字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param key: 密钥</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 加密后字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    encoded_chars </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> i </span><span style="color:#4D9375;">in</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">range</span><span style="color:#666666;">(</span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">)):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        key_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key</span><span style="color:#666666;">)]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        encoded_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">chr</span><span style="color:#666666;">(</span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key_c</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">256</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        encoded_chars</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">append</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoded_c</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    encoded_string </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;&quot;</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">join</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoded_chars</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> base64</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">urlsafe_b64encode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoded_string</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">encode</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">)).</span><span style="color:#DBD7CAEE;">decode</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">encode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    加密字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param key: 密钥</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 加密后字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    encoded_chars </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> i </span><span style="color:#4D9375;">in</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">range</span><span style="color:#666666;">(</span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">)):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        key_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key</span><span style="color:#666666;">)]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        encoded_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">chr</span><span style="color:#666666;">(</span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key_c</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">256</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        encoded_chars</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">append</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoded_c</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    encoded_string </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;&quot;</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">join</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoded_chars</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> base64</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">urlsafe_b64encode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">encoded_string</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">encode</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">)).</span><span style="color:#DBD7CAEE;">decode</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="decode" tabindex="-1">decode <a class="header-anchor" href="#decode" aria-hidden="true">#</a></h3><p>自定义密码解密字符串。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">decode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    解密字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param key: 密钥</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 解密后字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    decoded_chars </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    original_str </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> base64</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">urlsafe_b64decode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">).</span><span style="color:#DBD7CAEE;">decode</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> i </span><span style="color:#4D9375;">in</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">range</span><span style="color:#666666;">(</span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">)):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        key_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key</span><span style="color:#666666;">)]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        decoded_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">chr</span><span style="color:#666666;">((</span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key_c</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">256</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">256</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        decoded_chars</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">append</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">decoded_c</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    decoded_string </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;&quot;</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">join</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">decoded_chars</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> decoded_string</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark vp-code-light"><code><span class="line"><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">decode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">-&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">str</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C98A7D;">    解密字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param original_str: 原始字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    :param key: 密钥</span></span>
<span class="line"><span style="color:#C98A7D;">    :return: 解密后字符串</span></span>
<span class="line"><span style="color:#C98A7D;">    </span><span style="color:#C98A7DAA;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    decoded_chars </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    original_str </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> base64</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">urlsafe_b64decode</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">).</span><span style="color:#DBD7CAEE;">decode</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> i </span><span style="color:#4D9375;">in</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">range</span><span style="color:#666666;">(</span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">)):</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        key_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> key</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">len</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key</span><span style="color:#666666;">)]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        decoded_c </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">chr</span><span style="color:#666666;">((</span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">original_str</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">i</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">ord</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">key_c</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">256</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">%</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">256</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        decoded_chars</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">append</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">decoded_c</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    decoded_string </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;&quot;</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">join</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">decoded_chars</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> decoded_string</span></span>
<span class="line"></span></code></pre></div>`,36),e=[o];function t(r,c,y,D,E,A){return a(),n("div",null,e)}const B=s(p,[["render",t]]);export{i as __pageData,B as default};
